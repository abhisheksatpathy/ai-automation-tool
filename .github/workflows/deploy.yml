# .github/workflows/deploy.yml

name: Deploy Backend to Azure

on:
  push:
    branches: [ main ]  

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'  

    - name: Install Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install alembic
    
    - name: Verify DATABASE_URL
      working-directory: ./backend
      run: |
        if [ -z "$DATABASE_URL" ]; then echo "DATABASE_URL is not set"; exit 1; else echo "DATABASE_URL is set"; fi
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Run Alembic Migrations
      working-directory: ./backend
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        alembic upgrade head

    - name: Log in to Azure
      uses: azure/login@v1.4.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      run: az acr login --name aiautomationprojectacr

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Push Docker Image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          -t aiautomationprojectacr.azurecr.io/celery-worker:${{ github.sha }} \
          -f Dockerfile-celery/Dockerfile \
          --push .

    - name: Deploy to ACI
      run: |
        az container create \
          --resource-group ai-automation-tool-rg \
          --name celery-worker \
          --image aiautomationprojectacr.azurecr.io/celery-worker:${{ github.sha }} \
          --cpu 1 \
          --memory 1 \
          --os-type Linux \
          --registry-login-server aiautomationprojectacr.azurecr.io \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --environment-variables \
              OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              REDIS_URL=${{ secrets.REDIS_URL }} \
              AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }} \
          --restart-policy OnFailure


    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ai-automation-celery  
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./backend
